
import React, { useState, useEffect } from 'react';
import { Bell } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { toast } from '@/hooks/use-toast';
import { useAuth } from '@/components/AuthProvider';

const NotificationButton = () => {
  const [isSubscribing, setIsSubscribing] = useState(false);
  const [isSubscribed, setIsSubscribed] = useState(false);
  const { user } = useAuth();

  // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –≤–µ—á–µ –µ –∞–±–æ–Ω–∏—Ä–∞–Ω –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ
  useEffect(() => {
    const checkSubscriptionStatus = async () => {
      try {
        if (window.OneSignal) {
          const isPushEnabled = await window.OneSignal.User.PushSubscription.optedIn;
          setIsSubscribed(isPushEnabled);
          console.log(`üîî –¢–µ–∫—É—â —Å—Ç–∞—Ç—É—Å –Ω–∞ –∞–±–æ–Ω–∞–º–µ–Ω—Ç–∞: ${isPushEnabled ? '–∞–±–æ–Ω–∏—Ä–∞–Ω' : '–Ω–µ–∞–±–æ–Ω–∏—Ä–∞–Ω'}`);
        }
      } catch (error) {
        console.error("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–±–æ–Ω–∞–º–µ–Ω—Ç–∞:", error);
      }
    };

    checkSubscriptionStatus();
  }, []);

  // –§—É–Ω–∫—Ü–∏—è –∑–∞ –∞–±–æ–Ω–∏—Ä–∞–Ω–µ –∑–∞ –∏–∑–≤–µ—Å—Ç–∏—è
  const handleSubscribe = async () => {
    try {
      setIsSubscribing(true);
      
      if (window.OneSignal) {
        // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –≤–µ—á–µ –µ –∞–±–æ–Ω–∏—Ä–∞–Ω
        const isPushEnabled = await window.OneSignal.User.PushSubscription.optedIn;
        
        if (isPushEnabled) {
          setIsSubscribed(true);
          toast({
            title: "–í–µ—á–µ —Å—Ç–µ –∞–±–æ–Ω–∏—Ä–∞–Ω–∏",
            description: "–í–µ—á–µ –ø–æ–ª—É—á–∞–≤–∞—Ç–µ –∏–∑–≤–µ—Å—Ç–∏—è –æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ç–∞",
          });
        } else {
          console.log("üîî –ó–∞–ø–æ—á–≤–∞–º–µ –ø—Ä–æ—Ü–µ—Å–∞ –Ω–∞ –∞–±–æ–Ω–∏—Ä–∞–Ω–µ...");
          
          // –î–æ–±–∞–≤—è–º–µ —Å–ª—É—à–∞—Ç–µ–ª –ø—Ä–µ–¥–∏ –¥–∞ –ø–æ–∫–∞–∂–µ–º –ø—Ä–æ–∑–æ—Ä–µ—Ü–∞ –∑–∞ –∞–±–æ–Ω–∏—Ä–∞–Ω–µ
          const unsubscribe = window.OneSignal.User.PushSubscription.addEventListener('change', async (event) => {
            const isNowEnabled = await window.OneSignal.User.PushSubscription.optedIn;
            console.log(`üîî –°—Ç–∞—Ç—É—Å –Ω–∞ –∞–±–æ–Ω–∞–º–µ–Ω—Ç–∞ –ø—Ä–æ–º–µ–Ω–µ–Ω: ${isNowEnabled ? '–∞–±–æ–Ω–∏—Ä–∞–Ω' : '–Ω–µ–∞–±–æ–Ω–∏—Ä–∞–Ω'}`);
            
            if (isNowEnabled) {
              setIsSubscribed(true);
              
              try {
                // –ü–æ–ª—É—á–∞–≤–∞–º–µ player_id —Å–ª–µ–¥ —É—Å–ø–µ—à–µ–Ω –∞–±–æ–Ω–∞–º–µ–Ω—Ç
                const playerId = await window.OneSignal.User.PushSubscription.id;
                console.log(`üîî –ü–æ–ª—É—á–µ–Ω OneSignal player_id: ${playerId}`);
                
                if (playerId) {
                  // –ó–∞–ø–∏—Å–≤–∞–º–µ –∞–±–æ–Ω–∞–º–µ–Ω—Ç–∞ –≤ –±–∞–∑–∞—Ç–∞ –¥–∞–Ω–Ω–∏
                  console.log("üîî –û–ø–∏—Ç –∑–∞ –∑–∞–ø–∏—Å –Ω–∞ –∞–±–æ–Ω–∞–º–µ–Ω—Ç –≤ –±–∞–∑–∞—Ç–∞ –¥–∞–Ω–Ω–∏");
                  
                  if (window.supabase) {
                    const userId = user?.id || null;
                    console.log(`üîî –ó–∞–ø–∏—Å–≤–∞–Ω–µ –Ω–∞ push –∞–±–æ–Ω–∞—Ç —Å user_id: ${userId}, player_id: ${playerId}`);
                    
                    const { error } = await window.supabase
                      .from('push_subscribers')
                      .upsert([{
                        user_id: userId,
                        player_id: playerId
                      }], { onConflict: 'player_id' });
                    
                    if (error) {
                      console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å –Ω–∞ push –∞–±–æ–Ω–∞—Ç:", error);
                    } else {
                      console.log("‚úÖ Push –∞–±–æ–Ω–∞—Ç—ä—Ç –µ –∑–∞–ø–∏—Å–∞–Ω —É—Å–ø–µ—à–Ω–æ –≤ –±–∞–∑–∞—Ç–∞ –¥–∞–Ω–Ω–∏!");
                    }
                  } else {
                    console.error("‚ùå Supabase –∫–ª–∏–µ–Ω—Ç—ä—Ç –Ω–µ –µ –¥–æ—Å—Ç—ä–ø–µ–Ω");
                  }
                }
                
                toast({
                  title: "–£—Å–ø–µ—à–Ω–æ –∞–±–æ–Ω–∏—Ä–∞–Ω–µ",
                  description: "–í–µ—á–µ —â–µ –ø–æ–ª—É—á–∞–≤–∞—Ç–µ –∏–∑–≤–µ—Å—Ç–∏—è –∑–∞ –Ω–æ–≤–∏ —Å–∏–≥–Ω–∞–ª–∏",
                });
              } catch (error) {
                console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –∞–±–æ–Ω–∞–º–µ–Ω—Ç–∞:", error);
              }
              
              // –ü—Ä–µ–º–∞—Ö–≤–∞–º–µ —Å–ª—É—à–∞—Ç–µ–ª—è —Å–ª–µ–¥ —É—Å–ø–µ—à–Ω–æ –∞–±–æ–Ω–∏—Ä–∞–Ω–µ
              unsubscribe();
            }
          });
          
          // –ò–∑–ø–æ–ª–∑–≤–∞–º–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏—è OneSignal –ø—Ä–æ–∑–æ—Ä–µ—Ü –∑–∞ –∞–±–æ–Ω–∏—Ä–∞–Ω–µ
          console.log("üîî –ü–æ–∫–∞–∑–≤–∞–º–µ –ø—Ä–æ–∑–æ—Ä–µ—Ü–∞ –∑–∞ –∞–±–æ–Ω–∏—Ä–∞–Ω–µ");
          window.OneSignal.Slidedown.promptPush({
            force: true // –¢–æ–≤–∞ —â–µ –ø–æ–∫–∞–∂–µ –ø—Ä–æ–∑–æ—Ä–µ—Ü–∞ –¥–æ—Ä–∏ –∞–∫–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –≤–µ—á–µ –≥–æ –µ –æ—Ç—Ö–≤—ä—Ä–ª–∏–ª
          });
        }
      } else {
        console.error("‚ùå OneSignal –Ω–µ –µ –Ω–∞–ª–∏—á–µ–Ω");
        toast({
          title: "–ì—Ä–µ—à–∫–∞",
          description: "OneSignal –Ω–µ –µ –Ω–∞–ª–∏—á–µ–Ω. –ú–æ–ª—è, –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ –ø–æ-–∫—ä—Å–Ω–æ.",
          variant: "destructive",
        });
      }
    } catch (error) {
      console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∞–±–æ–Ω–∏—Ä–∞–Ω–µ –∑–∞ –∏–∑–≤–µ—Å—Ç–∏—è:", error);
      toast({
        title: "–ì—Ä–µ—à–∫–∞",
        description: "–í—ä–∑–Ω–∏–∫–Ω–∞ –ø—Ä–æ–±–ª–µ–º –ø—Ä–∏ –∞–±–æ–Ω–∏—Ä–∞–Ω–µ –∑–∞ –∏–∑–≤–µ—Å—Ç–∏—è",
        variant: "destructive",
      });
    } finally {
      setIsSubscribing(false);
    }
  };

  return (
    <Button
      className="bg-spasi-green hover:bg-spasi-green/90 text-white py-6 px-8 rounded-lg text-lg font-medium flex items-center gap-2 relative group overflow-hidden"
      onClick={handleSubscribe}
      disabled={isSubscribing || isSubscribed}
    >
      <span className="absolute inset-0 w-0 bg-white/20 transition-all duration-300 ease-out group-hover:w-full"></span>
      <Bell className="h-5 w-5 relative z-10" />
      <span className="relative z-10">
        {isSubscribing 
          ? "–û–±—Ä–∞–±–æ—Ç–∫–∞..." 
          : isSubscribed 
            ? "–ê–±–æ–Ω–∏—Ä–∞–Ω–∏ —Å—Ç–µ" 
            : "–ê–±–æ–Ω–∏—Ä–∞–π —Å–µ"
        }
      </span>
    </Button>
  );
};

export default NotificationButton;
