
import React, { useState, useEffect } from 'react';
import { Bell } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { toast } from '@/hooks/use-toast';
import { useAuth } from '@/components/AuthProvider';

const NotificationButton = () => {
  const [isSubscribing, setIsSubscribing] = useState(false);
  const [isSubscribed, setIsSubscribed] = useState(false);
  const [isLoading, setIsLoading] = useState(true);
  const { user } = useAuth();

  // –ü—Ä–æ–≤–µ—Ä—è–≤–∞ —Å—ä—Å—Ç–æ—è–Ω–∏–µ—Ç–æ –Ω–∞ –∞–±–æ–Ω–∞–º–µ–Ω—Ç–∞ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    checkSubscriptionStatus();
    
    // –î–æ–±–∞–≤—è–º–µ –≥–ª–æ–±–∞–ª–µ–Ω —Å–ª—É—à–∞—Ç–µ–ª –∑–∞ –ø—Ä–æ–º–µ–Ω–∏ –≤ –∞–±–æ–Ω–∞–º–µ–Ω—Ç–∞
    if (window.OneSignal) {
      console.log("üü¢ –ù–∞—Å—Ç—Ä–æ–π–≤–∞–º–µ OneSignal —Å–ª—É—à–∞—Ç–µ–ª –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ NotificationButton");
      
      // –û–ø—Ä–µ–¥–µ–ª—è–º–µ —Ñ—É–Ω–∫—Ü–∏—è—Ç–∞ handleSubscriptionChange –∏–∑–≤—ä–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –Ω–∞ —Å—ä–±–∏—Ç–∏—è
      const handleSubscriptionChange = async (event) => {
        try {
          console.log("üîÑ –ü—Ä–æ–º—è–Ω–∞ –≤ push –∞–±–æ–Ω–∞–º–µ–Ω—Ç–∞", event);
          
          const isSubscribed = await window.OneSignal.User.PushSubscription.optedIn;
          const playerId = await window.OneSignal.User.PushSubscription.id;
          
          console.log(`üîî –ù–æ–≤ —Å—Ç–∞—Ç—É—Å: ${isSubscribed ? '–∞–±–æ–Ω–∏—Ä–∞–Ω' : '–Ω–µ–∞–±–æ–Ω–∏—Ä–∞–Ω'}, ID: ${playerId || '–Ω—è–º–∞'}`);
          
          setIsSubscribed(isSubscribed);
          
          if (isSubscribed && playerId) {
            await saveSubscriptionToDatabase(playerId);
          }
        } catch (error) {
          console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –ø—Ä–æ–º—è–Ω–∞ –≤ –∞–±–æ–Ω–∞–º–µ–Ω—Ç–∞:", error);
        }
      };
      
      // –î–æ–±–∞–≤—è–º–µ —Å–ª—É—à–∞—Ç–µ–ª –∫—ä–º PushSubscription
      window.OneSignal.User.PushSubscription.addEventListener('change', handleSubscriptionChange);
      
      // –ü–æ—á–∏—Å—Ç–≤–∞–º–µ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–∞–Ω–µ
      return () => {
        if (window.OneSignal && window.OneSignal.User?.PushSubscription) {
          try {
            window.OneSignal.User.PushSubscription.removeEventListener('change', handleSubscriptionChange);
          } catch (error) {
            console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–µ–º–∞—Ö–≤–∞–Ω–µ –Ω–∞ —Å–ª—É—à–∞—Ç–µ–ª—è:", error);
          }
        }
      };
    }
  }, []);

  const checkSubscriptionStatus = async () => {
    try {
      setIsLoading(true);
      
      if (!window.OneSignal) {
        console.error("‚ùå OneSignal –Ω–µ –µ –∑–∞—Ä–µ–¥–µ–Ω");
        toast({
          title: "–°–∏—Å—Ç–µ–º–Ω–∞ –≥—Ä–µ—à–∫–∞",
          description: "–ò–∑–≤–µ—Å—Ç–∏—è—Ç–∞ –Ω–µ –º–æ–≥–∞—Ç –¥–∞ –±—ä–¥–∞—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–Ω–∏",
          variant: "destructive"
        });
        return;
      }

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ SDK –µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–Ω
      if (!window.OneSignal.initialized) {
        console.log("‚è≥ –ò–∑—á–∞–∫–≤–∞–º–µ OneSignal –¥–∞ —Å–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞...");
        // –ò–∑–ø–æ–ª–∑–≤–∞–º–µ deferred —Ñ—É–Ω–∫—Ü–∏—è, –∑–∞ –¥–∞ –∏–∑—á–∞–∫–∞–º–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è—Ç–∞
        window.OneSignalDeferred.push(async function() {
          await checkSubscriptionStatus();
        });
        return;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –µ –∞–±–æ–Ω–∏—Ä–∞–Ω
      const isPushSupported = await window.OneSignal.isPushNotificationsSupported();
      
      if (!isPushSupported) {
        console.log("‚ö†Ô∏è Push –∏–∑–≤–µ—Å—Ç–∏—è—Ç–∞ –Ω–µ —Å–µ –ø–æ–¥–¥—ä—Ä–∂–∞—Ç –æ—Ç —Ç–æ–∑–∏ –±—Ä–∞—É–∑—ä—Ä");
        toast({
          title: "–ù–µ–ø–æ–∑–≤–æ–ª–µ–Ω –±—Ä–∞—É–∑—ä—Ä",
          description: "–¢–æ–∑–∏ –±—Ä–∞—É–∑—ä—Ä –Ω–µ –ø–æ–¥–¥—ä—Ä–∂–∞ push –∏–∑–≤–µ—Å—Ç–∏—è",
          variant: "destructive"
        });
        setIsLoading(false);
        return;
      }
      
      const isPushSubscriptionActive = await window.OneSignal.User.PushSubscription.optedIn;
      const playerId = await window.OneSignal.User.PushSubscription.id;
      
      setIsSubscribed(isPushSubscriptionActive);
      
      console.log(`üîî –¢–µ–∫—É—â —Å—Ç–∞—Ç—É—Å –Ω–∞ –∞–±–æ–Ω–∞–º–µ–Ω—Ç–∞: ${isPushSubscriptionActive ? '–∞–±–æ–Ω–∏—Ä–∞–Ω' : '–Ω–µ–∞–±–æ–Ω–∏—Ä–∞–Ω'}`);
      console.log(`üÜî Player ID: ${playerId || '–Ω—è–º–∞'}`);
      
      // –ê–∫–æ –µ –∞–±–æ–Ω–∏—Ä–∞–Ω, –Ω–æ –Ω—è–º–∞–º–µ –∑–∞–ø–∏—Å–∞–Ω ID, –∑–∞–ø–∏—Å–≤–∞–º–µ –≥–æ –≤ Supabase
      if (isPushSubscriptionActive && playerId) {
        await saveSubscriptionToDatabase(playerId);
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–Ω–∏—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∑–∞ –∏–∑–≤–µ—Å—Ç–∏—è –≤ –±—Ä–∞—É–∑—ä—Ä–∞
      if ('permissions' in navigator) {
        try {
          const notificationPermission = await navigator.permissions.query({ name: 'notifications' });
          console.log("üîî –¢–µ–∫—É—â–æ –±—Ä–∞—É–∑—ä—Ä —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∑–∞ –∏–∑–≤–µ—Å—Ç–∏—è:", notificationPermission.state);
          
          // –ê–∫–æ –∏–º–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ, –Ω–æ –Ω—è–º–∞ active subscription, –æ–ø–∏—Ç–≤–∞–º–µ —Å–µ –¥–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–∞–º–µ
          if (notificationPermission.state === 'granted' && !isPushSubscriptionActive) {
            console.log("‚ö†Ô∏è –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ—Ç–æ –µ –¥–∞–¥–µ–Ω–æ, –Ω–æ –∞–±–æ–Ω–∞–º–µ–Ω—Ç—ä—Ç –Ω–µ –µ –∞–∫—Ç–∏–≤–µ–Ω - –æ–ø–∏—Ç –∑–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–∞–Ω–µ");
            
            // –û–ø–∏—Ç –∑–∞ –ø–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ –¥–∏–∞–ª–æ–≥–∞ –∑–∞ –ø—É—à –∏–∑–≤–µ—Å—Ç–∏—è
            setTimeout(() => {
              window.OneSignal.Slidedown.promptPush({
                force: true,
                forceSlidedownOverNative: true
              });
            }, 1000);
          }
        } catch (permError) {
          console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è—Ç–∞:", permError);
        }
      }
      
    } catch (error) {
      console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–±–æ–Ω–∞–º–µ–Ω—Ç–∞:", error);
      toast({
        title: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞ –≥—Ä–µ—à–∫–∞",
        description: "–ù–µ –º–æ–∂–∞—Ö–º–µ –¥–∞ –ø—Ä–æ–≤–µ—Ä–∏–º —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞ –∞–±–æ–Ω–∞–º–µ–Ω—Ç–∞",
        variant: "destructive"
      });
    } finally {
      setIsLoading(false);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –∑–∞ –∑–∞–ø–∏—Å–≤–∞–Ω–µ –Ω–∞ –∞–±–æ–Ω–∞–º–µ–Ω—Ç–∞ –≤ –±–∞–∑–∞—Ç–∞ –¥–∞–Ω–Ω–∏
  const saveSubscriptionToDatabase = async (playerId) => {
    try {
      console.log("üíæ –û–ø–∏—Ç–≤–∞–º–µ —Å–µ –¥–∞ –∑–∞–ø–∏—à–µ–º –∞–±–æ–Ω–∞–º–µ–Ω—Ç —Å ID:", playerId);
      
      if (!window.supabase) {
        console.error("‚ùå Supabase –∫–ª–∏–µ–Ω—Ç—ä—Ç –Ω–µ –µ –¥–æ—Å—Ç—ä–ø–µ–Ω");
        return;
      }
      
      const userId = user?.id || null;
      
      // –ü–æ–ª—É—á–∞–≤–∞–º–µ –¥–æ–ø—ä–ª–Ω–∏—Ç–µ–ª–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ—Ç–æ
      let deviceInfo = {
        browser: navigator.userAgent,
        platform: navigator.platform,
        timestamp: new Date().toISOString()
      };
      
      const { error } = await window.supabase
        .from('push_subscribers')
        .upsert([{
          user_id: userId,
          player_id: playerId,
          device_info: deviceInfo,
          updated_at: new Date().toISOString()
        }], { 
          onConflict: 'player_id',
          ignoreDuplicates: false // –í–∏–Ω–∞–≥–∏ –æ–±–Ω–æ–≤—è–≤–∞–º–µ –∑–∞–ø–∏—Å–∞
        });
      
      if (error) {
        console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å –Ω–∞ –∞–±–æ–Ω–∞–º–µ–Ω—Ç:", error);
        throw error;
      }
      
      console.log("‚úÖ Push –∞–±–æ–Ω–∞—Ç—ä—Ç –µ –∑–∞–ø–∏—Å–∞–Ω —É—Å–ø–µ—à–Ω–æ!");
    } catch (error) {
      console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å –Ω–∞ –∞–±–æ–Ω–∞–º–µ–Ω—Ç:", error);
    }
  };

  const handleSubscribe = async () => {
    try {
      setIsSubscribing(true);
      
      // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ OneSignal –µ –∑–∞—Ä–µ–¥–µ–Ω
      if (!window.OneSignal) {
        throw new Error("OneSignal –Ω–µ –µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–Ω");
      }

      console.log("üîî –ó–∞–ø–æ—á–≤–∞–º–µ –ø—Ä–æ—Ü–µ—Å–∞ –Ω–∞ –∞–±–æ–Ω–∏—Ä–∞–Ω–µ...");
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –±—Ä–∞—É–∑—ä—Ä—ä—Ç –ø–æ–¥–¥—ä—Ä–∂–∞ push –∏–∑–≤–µ—Å—Ç–∏—è
      const isPushSupported = await window.OneSignal.isPushNotificationsSupported();
      if (!isPushSupported) {
        toast({
          title: "–ù–µ–ø–æ–∑–≤–æ–ª–µ–Ω –±—Ä–∞—É–∑—ä—Ä",
          description: "–¢–æ–∑–∏ –±—Ä–∞—É–∑—ä—Ä –Ω–µ –ø–æ–¥–¥—ä—Ä–∂–∞ push –∏–∑–≤–µ—Å—Ç–∏—è",
          variant: "destructive"
        });
        return;
      }
      
      // –ü—Ä–µ–¥–∏ –¥–∞ –ø–æ–∫–∞–∂–µ–º –¥–∏–∞–ª–æ–≥–∞, –ø—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ —Ç–µ–∫—É—â–∏—è —Å—Ç–∞—Ç—É—Å
      const currentStatus = await window.OneSignal.User.PushSubscription.optedIn;
      console.log("üîî –¢–µ–∫—É—â —Å—Ç–∞—Ç—É—Å –ø—Ä–µ–¥–∏ –∞–±–æ–Ω–∏—Ä–∞–Ω–µ:", currentStatus ? "–∞–±–æ–Ω–∏—Ä–∞–Ω" : "–Ω–µ–∞–±–æ–Ω–∏—Ä–∞–Ω");
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª–Ω–æ –æ—Ç–≤–∞—Ä—è–º–µ –¥–∏–∞–ª–æ–≥–∞ –∑–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∏ –∏–∑—á–∞–∫–≤–∞–º–µ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è –¥–∞ –∏–∑–±–µ—Ä–µ
      const result = await window.OneSignal.Slidedown.promptPush({
        force: true,
        forceSlidedownOverNative: true
      });
      
      console.log("üìä –†–µ–∑—É–ª—Ç–∞—Ç –æ—Ç –¥–∏–∞–ª–æ–≥–∞:", result);
      
      // –ò–∑—á–∞–∫–≤–∞–º–µ –º–∞–ª–∫–æ, –∑–∞ –¥–∞ –ø–æ–∑–≤–æ–ª–∏–º –Ω–∞ –±—Ä–∞—É–∑—ä—Ä–∞ –¥–∞ –æ–±—Ä–∞–±–æ—Ç–∏ –∞–±–æ–Ω–∞–º–µ–Ω—Ç–∞
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –Ω–æ–≤–∏—è —Å—Ç–∞—Ç—É—Å —Å–ª–µ–¥ –¥–∏–∞–ª–æ–≥–∞
      const newStatus = await window.OneSignal.User.PushSubscription.optedIn;
      const playerId = await window.OneSignal.User.PushSubscription.id;
      
      console.log("üîî –ù–æ–≤ —Å—Ç–∞—Ç—É—Å —Å–ª–µ–¥ –¥–∏–∞–ª–æ–≥–∞:", newStatus ? "–∞–±–æ–Ω–∏—Ä–∞–Ω" : "–Ω–µ–∞–±–æ–Ω–∏—Ä–∞–Ω");
      console.log("üÜî –ù–æ–≤ Player ID:", playerId || "–Ω—è–º–∞");
      
      setIsSubscribed(newStatus);
      
      // –ê–∫–æ –∞–±–æ–Ω–∞–º–µ–Ω—Ç—ä—Ç –µ —É—Å–ø–µ—à–µ–Ω, –∑–∞–ø–∏—Å–≤–∞–º–µ –≤ –±–∞–∑–∞—Ç–∞ –¥–∞–Ω–Ω–∏
      if (newStatus && playerId) {
        await saveSubscriptionToDatabase(playerId);
        
        toast({
          title: "–£—Å–ø–µ—à–Ω–æ –∞–±–æ–Ω–∏—Ä–∞–Ω–µ",
          description: "–©–µ –ø–æ–ª—É—á–∞–≤–∞—Ç–µ –∏–∑–≤–µ—Å—Ç–∏—è –∑–∞ –Ω–æ–≤–∏ —Å–∏–≥–Ω–∞–ª–∏",
          variant: "default"
        });
      } else if (!newStatus) {
        // –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –µ –æ—Ç–∫–∞–∑–∞–ª –∞–±–æ–Ω–∞–º–µ–Ω—Ç–∞
        toast({
          title: "–ê–±–æ–Ω–∞–º–µ–Ω—Ç—ä—Ç –µ –æ—Ç–∫–∞–∑–∞–Ω",
          description: "–ù—è–º–∞ –¥–∞ –ø–æ–ª—É—á–∞–≤–∞—Ç–µ –∏–∑–≤–µ—Å—Ç–∏—è –∑–∞ –Ω–æ–≤–∏ —Å–∏–≥–Ω–∞–ª–∏",
          variant: "default"
        });
      }
      
    } catch (error) {
      console.error("‚ùå –û–±—âa –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –∞–±–æ–Ω–∏—Ä–∞–Ω–µ:", error);
      toast({
        title: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞ –≥—Ä–µ—à–∫–∞",
        description: "–ù–µ –º–æ–∂–∞—Ö–º–µ –¥–∞ –æ–±—Ä–∞–±–æ—Ç–∏–º –∞–±–æ–Ω–∞–º–µ–Ω—Ç–∞",
        variant: "destructive"
      });
    } finally {
      setIsSubscribing(false);
    }
  };

  if (isLoading) {
    return (
      <Button
        className="bg-spasi-green/80 text-white py-6 px-8 rounded-lg text-lg font-medium flex items-center gap-2"
        disabled={true}
      >
        <Bell className="h-5 w-5 animate-pulse" />
        <span>–ü—Ä–æ–≤–µ—Ä–∫–∞...</span>
      </Button>
    );
  }

  return (
    <Button
      className="bg-spasi-green hover:bg-spasi-green/90 text-white py-6 px-8 rounded-lg text-lg font-medium flex items-center gap-2 relative group overflow-hidden"
      onClick={handleSubscribe}
      disabled={isSubscribing || isSubscribed}
    >
      <span className="absolute inset-0 w-0 bg-white/20 transition-all duration-300 ease-out group-hover:w-full"></span>
      <Bell className="h-5 w-5 relative z-10" />
      <span className="relative z-10">
        {isSubscribing 
          ? "–û–±—Ä–∞–±–æ—Ç–∫–∞..." 
          : isSubscribed 
            ? "–ê–±–æ–Ω–∏—Ä–∞–Ω–∏ —Å—Ç–µ" 
            : "–ê–±–æ–Ω–∏—Ä–∞–π —Å–µ"
        }
      </span>
    </Button>
  );
};

export default NotificationButton;
